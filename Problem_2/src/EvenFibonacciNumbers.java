import java.util.ArrayList;
import java.util.List;

/**
 * Created by Leshiy on 04.06.14.
 */
/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

public class EvenFibonacciNumbers {
    public static void main(String[] args) {
        System.out.println(fibSum(4000000));

    }

    public static List<Integer> fibonnaciSeq(int n){
        List<Integer> fibList = new ArrayList<Integer>();
        fibList.add(1);
        fibList.add(2);
        int index = 1;
        int fibNext = 3;
        while(fibNext < n) {
            fibList.add(fibNext);
            index++;
            fibNext = fibList.get(index) + fibList.get(index - 1);
        }
        return fibList;
    }

    public static int fibSum(int n){
        List<Integer> list = fibonnaciSeq(n);
        int sum = 0;
        for(Integer i: list){
            if (i % 2 == 0)
                sum += i;
        }
        return sum;
    }


}
